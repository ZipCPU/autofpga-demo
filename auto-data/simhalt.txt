################################################################################
##
## Filename: 	simhalt.txt
##
## Project:	AutoFPGA basic peripheral demonstration project
##
## Purpose:	
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
##
## Copyright (C) 2017-2019, Gisselquist Technology, LLC
##
## This file is part of the AutoFPGA peripheral demonstration project.
##
## The AutoFPGA peripheral demonstration project is free software (firmware):
## you can redistribute it and/or modify it under the terms of the GNU Lesser
## General Public License as published by the Free Software Foundation, either
## version 3 of the License, or (at your option) any later version.
##
## The AutoFPGA peripheral demonstration project is distributed in the hope
## that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
## warranty of MERCHANTIBILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	LGPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/lgpl.html
##
##
################################################################################
##
##
@PREFIX=simhalt
@DEVID=SIMHALT
@NADDR=1
@SLAVE.TYPE=SINGLE
@SLAVE.BUS=wb
@TOP.PORTLIST=
	// The SIMHALT peripheral exposes *NO* top level ports
@TOP.IODECL=
	// The SIMHALT peripheral doesn't need to declare any top level ports
@TOP.DEFNS=
	wire		w_@$(PREFIX);
@TOP.MAIN=
		w_@$(PREFIX)
@MAIN.PORTLIST=
		o_@$(PREFIX)
@MAIN.IODECL=
	output	reg	o_@$(PREFIX);
@MAIN.INSERT=
	//
	// A simulation only peripheral: SIMHALT.  Sets a one-bit flag,
	// o_@$(PREFIX), read by the simulator as an indication of when to
	// halt the simulation.  Makes it easy to halt the simulation from
	// within the simulator.
	//
	initial	o_@$(PREFIX)=1'b0;
	always @(posedge i_clk)
	if (@$(SLAVE.PREFIX)_stb && @$(SLAVE.PREFIX)_we)
		o_@$(PREFIX) <= @$(SLAVE.PREFIX)_data[0];

	assign	@$(SLAVE.PREFIX)_idata = 32'h0;
@REGS.N=1
@REGS.0= 0 R_@$(DEVID) @$(DEVID)
@SIM.CLOCK=clk
@SIM.TICK=
		if (m_core->o_@$(PREFIX))
			exit(EXIT_SUCCESS);
